@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    color-scheme: light dark;

    --title-font: Oswald, sans-serif;
    --base-font: 'Helvetica Neue', Helvetica, Arial, sans-serif;

    --text-default: light-dark(
      theme('colors.slate.700'),
      theme('colors.slate.100')
    );
    --bg-default: light-dark(
      theme('colors.slate.100'),
      theme('colors.slate.800')
    );

    --brand-primary: hsl(0, 100%, 61%);
    --brand-secondary: hsl(194, 100%, 33%);
    --brand-hero-bg-color: #fa4242;
    --rgb-yellow: 255, 226, 0;
    --rgb-purple: 88, 86, 214;
    --brand-yellow: hsl(47, 88%, 62%);
    --brand-red: hsl(2, 68%, 58%);
    --brand-blue: hsl(221, 82%, 62%);
    --blue-blob: url('/assets/images/blue-blob.svg');
    --yellow-blob: url('/assets/images/yellow-blob.svg');
    --red-blob: url('/assets/images/red-blob.svg');
    --navbar-link-color: hsl(0, 0%, 0%);
    --grid-gutter-width: 50px;

    /* Diagonal variables to calculate padding */
    /* https://web.archive.org/web/20240128023827/https://9elements.com/blog/create-diagonal-layouts-like-it-s-2020/ */
    --skew-amount: 3;
    --skew-angle: calc(var(--skew-amount) * 1deg);
    --negative-skew-angle: calc(var(--skew-amount) * -1deg);
    --content-width: 100vw;
    --magic-number: tan(var(--skew-angle));
    --skew-padding: calc(var(--content-width) * var(--magic-number) / 2);
  }

  @media screen and (min-width: theme('screens.sm')) {
    :root {
      --content-width: theme('screens.sm');
    }
  }

  @media screen and (min-width: theme('screens.md')) {
    :root {
      --content-width: theme('screens.md');
    }
  }

  @media screen and (min-width: theme('screens.lg')) {
    :root {
      --content-width: theme('screens.lg');
    }
  }

  @media screen and (min-width: theme('screens.xl')) {
    :root {
      --content-width: theme('screens.xl');
    }
  }

  @media screen and (min-width: theme('screens.2xl')) {
    :root {
      --content-width: theme('screens.2xl');
    }
  }

  @media screen and (min-width: theme('screens.3xl')) {
    :root {
      --content-width: theme('screens.3xl');
    }
  }

  /* oswald-300 - latin */
  @font-face {
    font-display: swap;
    font-family: 'Oswald';
    font-style: normal;
    font-weight: 300;
    src: url('/assets/fonts/oswald-v53-latin-300.woff2') format('woff2');
  }

  html {
    color: theme('colors.slate.700');
    color: var(--text-default);
    hanging-punctuation: first last;
    scroll-behavior: smooth;
    scroll-padding-block-start: 6rem;
    scrollbar-gutter: stable both-edges;
  }

  h1,
  h2,
  h3 {
    margin-block-end: 1em;
    margin-block-start: 1.5em;
    text-wrap: balance;
  }

  p {
    /* max-width: theme('maxWidth.prose'); */
    text-wrap: pretty;
  }

  main p + p {
    margin-block-start: 1em;
  }

  input,
  textarea {
    hanging-punctuation: none;
  }

  mark,
  .text-highlight {
    background: linear-gradient(
      90deg,
      rgba(var(--rgb-yellow), 0) 0,
      rgba(var(--rgb-yellow), 0.75) 6%,
      rgba(var(--rgb-yellow), 0.25) 93%,
      rgba(var(--rgb-yellow), 0) 100%
    );
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    color: var(--text-default);
    display: inline;
  }

  @media (prefers-color-scheme: dark) {
    mark,
    .text-highlight {
      background: linear-gradient(
        90deg,
        rgba(var(--rgb-purple), 0) 0,
        rgba(var(--rgb-purple), 0.75) 6%,
        rgba(var(--rgb-purple), 0.25) 93%,
        rgba(var(--rgb-purple), 0) 100%
      );
    }
    --brand-hero-bg-color: img {filter: brightness(0.8) ;};
  }
}

@layer components {
  /* SKIP LINK */
  #skip-link {
    background: theme('colors.slate.950');
    border-radius: 9999px;
    color: theme('colors.slate.200');
    font-weight: 500;
    left: 50%;
    padding: 0.25rem 1rem;
    position: absolute;
    transform: translate(-50%, -100%);
    transition: transform 0.3s;
    z-index: calc(infinity);
  }

  #skip-link:focus {
    margin-top: 1.25rem;
    transform: translate(-50%, 0);
  }

  .list-csv > li {
    display: inline;
    font-size: 1.1em;
    line-height: 1;
    padding: 0;
  }

  .list-csv > li:after {
    color: #dfe0d3;
    content: ' / ';
    font-size: 2em;
    left: 0.06em;
    position: relative;
    top: 0.21em;
  }

  .list-csv > li:last-child:after {
    color: transparent;
  }

  .list-count {
    counter-reset: counter;
    list-style: none;
  }

  .list-count > li {
    align-items: center;
    break-inside: avoid-column; /* IE and Edge */
    -webkit-column-break-inside: avoid; /* Chrome, Safari */
    display: flex;
    padding-block: 0.75em;
    page-break-inside: avoid; /* Firefox */
  }

  .list-count-counter::before {
    /* background-color: #eee; */
    background-color: theme('colors.zinc.200');
    border-radius: 100%;
    color: theme('colors.zinc.800');
    content: counter(counter);
    counter-increment: counter;
    display: grid;
    /* font-family: var(--title-font); */
    height: 3em;
    place-content: center;
    width: 3em;
  }

  .list-count > li:nth-child(3n + 1) > .list-count-counter::before {
    /* background-color: theme('colors.red.100');
    border: 1px solid theme('colors.red.300');
    color: theme('colors.red.900'); */
    background-color: theme('colors.red.400');
    border: 3px solid theme('colors.red.300');
    color: theme('colors.red.950');
  }

  .list-count > li:nth-child(3n + 2) > .list-count-counter::before {
    /* background-color: theme('colors.blue.100');
    border: 1px solid theme('colors.blue.300');
    color: theme('colors.blue.900'); */
    background-color: theme('colors.blue.400');
    border: 3px solid theme('colors.blue.300');
    color: theme('colors.blue.950');
  }

  .list-count > li:nth-child(3n + 3) > .list-count-counter::before {
    background-color: theme('colors.yellow.400');
    border: 3px solid theme('colors.yellow.300');
    color: theme('colors.yellow.950');
  }

  @media (prefers-color-scheme: dark) {
    .list-count > li:nth-child(3n + 1) > .list-count-counter::before {
      background-color: theme('colors.red.900');
      border: 0;
      color: theme('colors.red.100');
    }

    .list-count > li:nth-child(3n + 2) > .list-count-counter::before {
      background-color: theme('colors.blue.900');
      border: 0;
      color: theme('colors.blue.100');
    }

    .list-count > li:nth-child(3n + 3) > .list-count-counter::before {
      background-color: theme('colors.yellow.900');
      border: 0;
      color: theme('colors.yellow.100');
    }
  }

  .list-count-label {
    display: table-cell;
    padding-left: 1em;
    vertical-align: middle;
  }

  .smol-card-component {
    --img-ratio: 3/2;
    /* border: 1px solid theme('colors.zinc.200'); */
    /* border-radius: theme('borderRadius.2xl'); */

    display: flex;
    flex-direction: column;
    gap: theme('spacing.4');
  }

  .smol-card-component > img {
    aspect-ratio: var(--img-ratio);
    object-fit: cover;
    width: 100%;
  }

  .smol-card-component > img:first-child {
    border-radius: theme('borderRadius.2xl') theme('borderRadius.2xl') 0 0;
  }

  .smol-card-component > img:last-child {
    border-radius: 0 0 theme('borderRadius.2xl') theme('borderRadius.2xl');
    margin-top: auto;
  }

  .smol-card-component > :not(img) {
    /* Prevent typography "orphans" */
    text-wrap: pretty;
  }

  .smol-card-component > :not(img):first-child {
    margin-top: theme('spacing.4');
  }

  /* Enhanced `:not()` accepts a selector list,
but as a fallback you can chain `:not()` instead */
  .smol-card-component > :last-of-type:not(img, h2, h3, h4) {
    margin-bottom: theme('spacing.4');
  }

  .smol-card-component > a {
    align-self: start;
  }

  #caplanBlobs {
    shape-margin: theme('space.12');
    shape-outside: url('/assets/images/caplan-blobs-shape-outside.svg');
    width: 650px;
  }

  /* DIAGONAL BOX */

  .diagonal-box {
    position: relative;
  }

  .diagonal-box::before {
    content: '';
    inset: 0;
    position: absolute;
    transform: skewY(var(--negative-skew-angle));
  }

  .content {
    margin-inline: auto;
    padding-block: var(--skew-padding);
    position: relative;
  }

  /* Blobs at background */
  .bg-blobs {
    isolation: isolate;
  }

  .bg-blobs::before {
    z-index: 1;
  }

  .bg-blobs > .content {
    z-index: 3;
  }

  .bg-blobs::after {
    background-clip: content-box;
    background-image: var(--red-blob), var(--blue-blob), var(--yellow-blob);
    background-position:
      -40% 140%,
      50% 137%,
      130% 120%;
    background-repeat: no-repeat;
    background-size: 50%, 40%, 40%;
    border-bottom: 1px solid theme('colors.slate.400');
    content: '';
    inset: 0;
    opacity: 0.9;
    position: absolute;
    transform: skewY(var(--negative-skew-angle));
    z-index: 2;
  }

  /* List with no-symbol SVG marker */
  .list-limitations {
    list-style: none;
    padding-inline-start: 0;
  }

  .list-limitations > li {
    display: flex;
    gap: 0.75em;
    padding-block: 0.5em;
  }

  .list-limitations > li::before {
    --color: theme(colors.red.500); /* Replace with the color you want */
    --svg-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23' fill-rule='evenodd' d='M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z' clip-rule='evenodd' width='16' height='16' /%3E%3C/svg%3E")
      no-repeat center;
    background: var(--color);
    content: '';
    display: inline-block;
    flex-shrink: 0; /* Prevents the icon from sizing */
    height: 1.5em;
    margin-top: 0.05em;
    -webkit-mask: var(--svg-mask);
    mask: var(--svg-mask);
    width: 1.5em;
  }
}

@layer utilities {
  /* This class is generated by the tailwind config. The font-smoothing makes the text less bold in Safari, but bolder in Chrome? */
  .font-display {
    -webkit-font-smoothing: antialiased;
  }
}
