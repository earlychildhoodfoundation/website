{% css %}
.column-index-2::after,
.column-index-3::after {
  content: "";
  display: block;
  height: 5%; /* The amount you're translating the other columns */
  transform: translateY(-5%);
}
@media (prefers-reduced-motion: no-preference) {
  .guideline-cards.is-intersecting .guideline-card {
    --animation-properties: fade-in 700ms ease-out forwards, 
                          scale-up 500ms ease-out forwards,
                          move-up 400ms ease-out forwards;
  }

  .guideline-cards.is-intersecting .guideline-card:nth-child(1) {
    --destination-y: -5%;
    animation: var(--animation-properties), in-left 600ms ease-out forwards;
  }

  .guideline-cards.is-intersecting .guideline-card:nth-child(2) {
    animation-delay: 150ms;
    animation: var(--animation-properties);
  }
  .guideline-cards.is-intersecting .guideline-card:nth-child(3) {  
    animation-delay: 300ms;
    --destination-y: 5%;
    animation: var(--animation-properties), in-right 400ms ease-out forwards;
  }
}
{% endcss %}

{% js %}
if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
  const guidelineCards = document.querySelector('.guideline-cards');

  [...guidelineCards.children].forEach(child => {
    child.style.opacity = '0';
  });

  const guidelineCardsObserver = new IntersectionObserver((entries) => {
    const entry = entries[0];
    if (entry.isIntersecting) {
      entry.target.classList.add('is-intersecting');
    } else {
      entry.target.classList.remove('is-intersecting');
    }
  }, {
    rootMargin: '0% 0% 0% 0%',
  });

  guidelineCardsObserver.observe(guidelineCards);
}
{% endjs %}

<section class="diagonal-box bg-blobs before:bg-gradient-to-b before:lg:bg-gradient-to-br before:from-red-100/50 before:via-blue-100/50 before:to-yellow-100/50  before:dark:from-slate-700 before:dark:via-slate-700  before:dark:to-sky-900 before:border-t before:border-slate-300 dark:before:border-0 py-4" tabindex="-1" aria-labelledby="program-guidelines">
  <div class="content max-w-screen-3xl">
    <div class="max-w-screen-xl mx-auto px-4 mb-6 2xl:mb-20">
      <h2 id="program-guidelines" class="font-display text-red-600 dark:text-red-400 text-3xl md:text-4xl">Program Guidelines</h2>
      <p class="text-xl">The Foundation provides funding in the following areas</p>
    </div>
    <ul class="guideline-cards pt-4 pb-8 flex flex-col md:flex-row gap-1 md:gap-2 max-2xl:flex-wrap justify-center isolate 2xl:px-24">
      {%- for guideline in data.guidelines %}
        <li class="guideline-card xl:pt-4 pb-6 lg:pb-12 lg:rounded-2xl md:flex-grow-0 md:flex-shrink 2xl:flex-grow lg:basis-[490px] xl:basis-[550px] {{ guideline.translationClass }} column-index-{{loop.index}}">
          <img alt="{{ guideline.image.alt }}" src="{{ site.imgDir }}{{ guideline.image.file }}" width="{{ guideline.image.width }}" height="{{ guideline.image.height }}" class="border-8 rounded-2xl mx-auto {{ guideline.image.rotationClass }} {{ guideline.image.borderColorClass }}  2xl:-translate-y-12 max-w-[90%]"/>
          <div class="relative mt-4 lg:mt-12 {{guideline.paragraphClass}}">
            <div class="{{ guideline.cardClass }} {{ guideline.titleClass }} dark:xl:bg-slate-800/60 dark:text-slate-100 dark:border-transparent px-6 pt-2 pb-6 rounded-xl backdrop-blur-sm">
              <h3 class="mt-4 text-xl md:text-2xl font-semibold leading-relaxed {{ guideline.titleClass }}">
                <span class="dark:text-slate-300 py-1">{{ guideline.title }}</span></h3>
              {%- for paragraph in guideline.paragraphs %}
                <p class="mt-4 text-xl md:text-2xl">{{ paragraph | safe }}</p>
              {%- endfor %}
            </div>
          </div>
        </li>
      {%- endfor %}
    </ul>
  </div>
</section>