{% macro createChart(divId, chartTitle, yTitle, dataKeys, filterCondition) %}
  <div id="{{divId}}-wrapper" class="{{divId}} p-3 bg-slate-800 rounded-3xl relative min-h-[400px]">
    <canvas id="{{divId}}"></canvas>
  </div>
  <script>
    window.addEventListener('chartjsLoaded', function () {
      let data = fullData.filter(item => {{filterCondition}});
      // Limit to last 30 items
      // data = data.slice(-30);
      const labels = data.map(item => {
        if (item.date === null) {
          return;
        }
        const [year, month, day] = item
          .date
          .split('-')
          .map(Number);
        const date = new Date(year, month - 1, day);
        return date.toLocaleDateString('en-US', {
          month: 'short',
          day: 'numeric'
        });
      });
      const datasets = {{dataKeys | dump | safe}}.map(key => {
        return {
          label: key,
          data: data.map(item => item[key]),
          fill: true,
          tension: 0.1,
          spanGaps: true
        };
      });

      // Create the chart
      const ctx = document
        .getElementById('{{divId}}')
        .getContext('2d');
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: datasets
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            title: {
              display: true,
              text: '{{chartTitle | safe}}',
              color: '#ffffff',
              font: {
                size: 20
              }
            },
            tooltip: {
              mode: 'index',
              intersect: false
            },
            hover: {
              mode: 'nearest',
              intersect: true
            },
            legend: {
              display: {{ (dataKeys.length > 1) }},
              position: 'bottom',
              labels: {
                color: '#ffffff',
                font: {
                  size: 16
                }
              }
            }
          },
          scales: {
            x: {
              display: true,
              title: {
                display: true,
                text: 'Date',
                color: 'rgb(148 163 184)',
                font: {
                  size: 16
                }
              },
              ticks: {
                color: '#ffffff',
                font: {
                  size: 16
                }
              }
            },
            y: {
              display: true,
              title: {
                display: true,
                text: '{{yTitle | safe}}',
                color: 'rgb(148 163 184)',
                font: {
                  size: 16
                }
              },
              min: 0,
              ticks: {
                color: '#ffffff',
                font: {
                  size: 16
                }
              }
            }
          }
        }
      });
    });
  </script>
{% endmacro %}

{%- macro table(data) %}
  <div class="table-wrapper">
    <table class="table">
      <caption class="table__caption mx-4">Dataset refreshes once daily. Showing 14 most recent entries out of  <a href="https://productive-hen-976.notion.site/44783b32996f49919b6087a276825b6f?v=d48450214b91442895eaab2016be3e35" rel="canonical" class="underline hover:text-slate-400">{{ data.length }} entries</a> total.</caption>
      <thead>
        <tr class="table__header-row">
          <th class="table__header-cell" scope="col">Date</th>
          {%- for key, value in data[0] %}
            {%- if key != 'date' %}
              <th class="table__header-cell" scope="col">{{ key | toHeading }}</th>
            {%- endif %}
          {%- endfor %}
        </tr>
      </thead>

      <tbody>
        {%- for obj in data %}
          {%- if loop.index <= 14 %}
            <tr class="{{ 'table__body-row--dark' if loop.index % 2 == 1 else 'table__body-row--light' }}">
              <th class="table__body-cell" scope="row">{{ obj.date }}</th>
              {%- for key, value in obj %}
                {%- if key != 'date' %}
                  {% if value == true %}
                    {%- set printValue = 'âœ…' %}
                  {% elif value == false %}
                    {%- set printValue = '' %}
                  {% else %}
                    {%- set printValue = value %}
                  {% endif %}
                  <td class="table__body-cell">{{ printValue }}</td>
                {%- endif %}
              {%- endfor %}
            </tr>
          {%- endif %}
        {%- endfor %}
      </tbody>
    </table>
  </div>
{%- endmacro %}

{%- macro calendar(s,data) %}
  <div id="calendar-{{ s.parameter }}">
    <h2 class="font-bold mb-2 mx-4 flex items-center md:justify-center">
      <span class="text-2x md:text-3xl lg:text-4xl" aria-hidden>{{ s.emoji }}</span><span class="text-xl ml-2 whitespace-nowrap overflow-x-hidden text-ellipsis" title="{{ s.title }}">{{ s.title }}</span></h2>
    <div class="md:grid md:grid-cols-2 md:gap-0">
      {# {{ data[0].days[0] | dump }} #}
      {%- for month in data | reverse %}
        {%- if loop.index == 1 %}
          {%- set borderClasses = "max-md:border-b-0 max-md:rounded-b-none md:border-r-0 md:rounded-r-none" %}
        {%- elif loop.index == 2 %}
          {%- set borderClasses = "max-md:border-t-0 max-md:rounded-t-none md:border-l-1 md:rounded-l-none md:-ml-1 " ~ s.theme.borderColorDivider %}
        {%- endif %}
        <div class="rounded-3xl overflow-clip border-4 {{ s.theme.borderColor }} {{ borderClasses }}">
          <table class="table-auto w-full {{ s.theme.textColor }} font-medium font-mono text-xl">
            <caption class="py-4 {{ 'max-md:py-0' if loop.index == 2 }} {{ s.theme.bgCaptionColor }} font-semibold font-inter text-2xl">{{ month.monthHumanReadable }}

              <!-- {{ month.year }}-->
            </caption>
            <thead>
              {%- if loop.index == 1 %}
                {%- set rowBgColorClass = s.theme.bgHeadColor %}
              {%- else %}
                {%- set rowBgColorClass = s.theme.bgSecondHeadColor %}
                {%- set isSrOnly = 'max-md:sr-only' %}
              {%- endif %}
              <tr class="{{ rowBgColorClass }} {{ lgRowBgColorClass }}">
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Mo</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Tu</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">We</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Th</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Fr</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Sa</span></th>
                <th scope="col" class="px-2 py-2 font-medium relative">
                  <span class="{{ isSrOnly }}">Su</span></th>
              </tr>
            </thead>
            <tbody class="{{ s.theme.textColor }} {{ s.theme.bgCaptionColor }}">
              {% set counter = 0 %}
              {%- for i in range(0, month.daysToSkip) %}
                {% if counter % 7 == 0 %}
                  {% if counter != 0 %}
                  </tr>
                {% endif %}
                <tr>
                {% endif %}
                <td class="px-2"></td>
                {% set counter = counter + 1 %}
              {%- endfor %}
              {%- for day in month.days %}
                {% if counter % 7 == 0 %}
                  {% if counter != 0 %}
                  </tr>
                {% endif %}
                <tr>
                {% endif %}
                {%- set timeClasses = 'rounded-full ' ~ s.theme.borderColor ~ ' ' ~ s.theme.bgHeadColor if day[s.parameter] else 'border-transparent' %}
                {%- set statusTooltip = 'disabled' if not s.tooltip.active or not day[s.parameter] else '' %}
                <td class="{{s.theme.textColor}}">
                  <sl-tooltip content="{{ day[s.parameter] }} {{ s.tooltip.unit }}" placement="top" {{ statusTooltip }}>
                    <time class="{{ timeClasses }} border aspect-square grid place-content-center m-1" datetime="{{day.isoString}}">
                      <span>{{day.day}}</span>
                    </time>
                  </sl-tooltip>
                </td>
                {% set counter = counter + 1 %}
              {%- endfor %}
              {%- for i in range(0, month.daysToAppend) %}
                <td class="px-2"></td>
                {% set counter = counter + 1 %}
              {%- endfor %}
              {% if counter != 0 %}
              </tr>
            {% endif %}
          </tbody>
        </table>
      </div>

      <!-- /.rounded-3xl -->
    {%- endfor %}
  </div>

  <!-- /.two-up-grid -->
</div>
{%- endmacro %}

{%- macro recentData(data) %}
<ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 rounded-2xl sm:rounded-3xl p-2 bg-emerald-600">
  {%- for key, value in data %}
    <li class="flex sm:flex-col max-sm:gap-x-8 p-5 text-center bg-emerald-950 sm:pt-12 sm:pb-10 rounded-2xl max-sm:items-center">
      <div class="whitespace-nowrap max-sm:flex md:flex items-center justify-center sm:mt-3">
        <div class="font-bold sm:font-extrabold tracking-tight text-cyan-400 text-4xl sm:text-6xl">{{ value.value }}</div>
        {%- if key == 'gh' or key == 'kh' %}
          {%- set unit = 'dKH' %}
        {%- elif key == 'ph' %}
          {%- set unit = '&nbsp;' %}
        {%- else %}
          {%- set unit = 'ppm' %}
        {%- endif %}
        <div class="text-cyan-500 text-lg font-medium max-sm:ml-3 md:ml-3">{{ unit | safe }}</div>
      </div>
      <div class="text-orange-200 text-xl font-bold tracking-wider md:tracking-widest font-medium sm:mt-6 uppercase max-sm:ml-auto">{{ key }}</div>
      <div class="text-orange-200/60 text-xl font-base mt-1">{{ value.date | shortDate }}</div>
    </li>
  {%- endfor %}
</ul>
{%- endmacro %}